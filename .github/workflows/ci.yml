name: Xqlite

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  format_and_lint:
    name: Format & Lint Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.18"
          otp-version: "27"

      - name: Restore Elixir build cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            priv/native
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock', 'native/**') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: mix deps.get

      - name: Check Elixir formatting
        run: mix format --check-formatted

      # - name: Run Credo
      #   run: mix credo --strict

  dialyzer:
    name: Dialyzer Type Check
    runs-on: ubuntu-latest
    needs: format_and_lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.18"
          otp-version: "27"

      - name: Restore Dialyzer PLT cache
        uses: actions/cache@v4
        with:
          path: |
            priv/plts
          key: ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plt-

      - name: Restore Elixir build cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            priv/native
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock', 'native/**') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        run: mix deps.get

      - name: Create PLT (if not cached or outdated)
        run: mix dialyzer --plt

      - name: Run Dialyzer
        run: mix dialyzer --format short

  test:
    name: Run Tests (Elixir & Rust NIF)
    runs-on: ubuntu-latest
    needs: [format_and_lint, dialyzer]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.18"
          otp-version: "27"

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: "stable"

      - name: Restore Elixir build cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            priv/native
          key: ${{ runner.os }}-build-1.18-27-${{ hashFiles('**/mix.lock', 'native/**') }}
          restore-keys: |
            ${{ runner.os }}-build-1.18-27-

      - name: Install Elixir dependencies
        run: mix deps.get

      - name: Compile project (includes NIF)
        run: mix compile

      - name: Rust formatting
        run: cargo fmt --manifest-path native/xqlitenif/Cargo.toml -- --check

      - name: Rust clippy
        run: cargo clippy --manifest-path native/xqlitenif/Cargo.toml -- -D warnings

      - name: Run tests
        run: mix test --max-cases 1 --trace --preload-modules
